{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/TextField/TextField.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","TextField","name","value","label","required","onChange","useState","Math","random","toString","slice","id","touched","setToched","hasError","pattern","isValidImgUrl","setisValidImgUrl","isImgUrlErrorShown","htmlFor","classNames","type","placeholder","event","test","target","onBlur","NewMovie","onAdd","count","setCount","setMovie","isRequiared","isButtonDisabled","onSubmit","preventDefault","submitHandler","val","prev","disabled","App","moviesFromServer","setMovies","state","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0d926451.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movie-card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import classNames from 'classnames';\nimport React, { useState } from 'react';\n\ntype Props = {\n  name: string,\n  value: string,\n  label?: string,\n  required?: boolean,\n  onChange?: (newValue: string) => void,\n};\n\nfunction getRandomDigits() {\n  return Math.random().toString().slice(2);\n}\n\nexport const TextField: React.FC<Props> = ({\n  name,\n  value,\n  label = name,\n  required = false,\n  onChange = () => {},\n}) => {\n  const [id] = useState(() => `${name}-${getRandomDigits()}`);\n  const [touched, setToched] = useState(false);\n  const hasError = touched && required && !value;\n\n  // eslint-disable-next-line max-len\n  const pattern = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\w]*))?)$/;\n\n  const [isValidImgUrl, setisValidImgUrl] = useState(false);\n  const currentUrl = name === 'imgUrl' || name === 'imdbUrl';\n  const isImgUrlErrorShown = currentUrl && touched\n  && required && value && !isValidImgUrl;\n\n  return (\n    <div className=\"field\">\n      <label className=\"label\" htmlFor={id}>\n        {label}\n      </label>\n\n      <div className=\"control\">\n        <input\n          id={id}\n          data-cy={`movie-${name}`}\n          className={classNames('input', {\n            'is-danger': hasError,\n          })}\n          type=\"text\"\n          placeholder={`Enter ${label}`}\n          value={value}\n          onChange={event => {\n            setisValidImgUrl(pattern.test(event.target.value));\n            onChange(event.target.value);\n          }}\n          onBlur={() => {\n            return setToched(true);\n          }}\n          required={required}\n        />\n      </div>\n\n      {hasError && (\n        <p className=\"help is-danger\">{`${label} is required`}</p>\n      )}\n\n      {isImgUrlErrorShown && (\n        <p className=\"help is-danger\">{`${label} is not valid`}</p>\n      )}\n    </div>\n  );\n};\n","import { useState } from 'react';\nimport { TextField } from '../TextField';\n\ntype Movie = {\n  title: string,\n  description: string,\n  imgUrl: string,\n  imdbUrl: string,\n  imdbId: string,\n};\n\ntype Props = {\n  onAdd: (arg: Movie) => void;\n};\n\nexport const NewMovie: React.FC<Props> = ({ onAdd }) => {\n  const [count, setCount] = useState(0);\n  const [movie, setMovie] = useState({\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n  });\n\n  const [isRequiared] = useState({\n    title: true,\n    description: false,\n    imgUrl: true,\n    imdbUrl: true,\n    imdbId: true,\n  });\n\n  const submitHandler = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    setCount(count + 1);\n\n    onAdd(movie);\n    setMovie({\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n    });\n  };\n\n  const isButtonDisabled = !movie.title || !movie.imdbId\n  || !movie.imdbUrl || !movie.imgUrl;\n\n  return (\n    <form\n      className=\"NewMovie\"\n      key={count}\n      onSubmit={(event) => submitHandler(event)}\n    >\n      <h2 className=\"title\">Add a movie</h2>\n\n      <TextField\n        name=\"title\"\n        label=\"Title\"\n        value={movie.title}\n        onChange={(val) => setMovie(prev => ({\n          ...prev,\n          title: val,\n        }))}\n        required={isRequiared.title}\n      />\n\n      <TextField\n        name=\"description\"\n        label=\"Description\"\n        value={movie.description}\n        onChange={(val) => setMovie(prev => ({\n          ...prev,\n          description: val,\n        }))}\n        required={isRequiared.description}\n      />\n\n      <TextField\n        name=\"imgUrl\"\n        label=\"Image URL\"\n        value={movie.imgUrl}\n        onChange={(val) => setMovie(prev => ({\n          ...prev,\n          imgUrl: val,\n        }))}\n        required={isRequiared.imgUrl}\n      />\n\n      <TextField\n        name=\"imdbUrl\"\n        label=\"Imdb URL\"\n        value={movie.imdbUrl}\n        onChange={(val) => setMovie(prev => ({\n          ...prev,\n          imdbUrl: val,\n        }))}\n        required={isRequiared.imdbUrl}\n      />\n\n      <TextField\n        name=\"imdbId\"\n        label=\"Imdb ID\"\n        value={movie.imdbId}\n        onChange={(val) => setMovie(prev => ({\n          ...prev,\n          imdbId: val,\n        }))}\n        required={isRequiared.imdbId}\n      />\n\n      <div className=\"field is-grouped\">\n        <div className=\"control\">\n          <button\n            type=\"submit\"\n            data-cy=\"submit-button\"\n            className=\"button is-link\"\n            disabled={isButtonDisabled}\n          >\n            Add\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n};\n","import './App.scss';\nimport { useState } from 'react';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport const App = () => {\n  const [movies, setMovies] = useState(moviesFromServer);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <NewMovie onAdd={(movie) => {\n          setMovies((state) => [...state, movie]);\n        }}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}